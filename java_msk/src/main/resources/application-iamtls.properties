spring.application.name=aws-api
server.port=${SERVER_PORT:80}
#msk iamtls
spring.kafka.bootstrap-servers=*.kafka.ap-southeast-1.amazonaws.com:9098,*.kafka.ap-southeast-1.amazonaws.com:9098
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
#-----IAM & TLS
spring.kafka.ssl.trust-store-location=file:/tmp/kafka.client.iam.truststore.jks
spring.kafka.producer.properties.security.protocol=SASL_SSL
spring.kafka.producer.properties.sasl.mechanism=AWS_MSK_IAM
spring.kafka.producer.properties.sasl.jaas.config=software.amazon.msk.auth.iam.IAMLoginModule required;
spring.kafka.producer.properties.sasl.client.callback.handler.class=software.amazon.msk.auth.iam.IAMClientCallbackHandler
#---------
spring.kafka.consumer.group-id=test
spring.kafka.consumer.enable-auto-commit=true
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#-----IAM & TLS
spring.kafka.consumer.properties.security.protocol=SASL_SSL
spring.kafka.consumer.properties.sasl.mechanism=AWS_MSK_IAM
spring.kafka.consumer.properties.sasl.jaas.config=software.amazon.msk.auth.iam.IAMLoginModule required;
spring.kafka.consumer.properties.sasl.client.callback.handler.class=software.amazon.msk.auth.iam.IAMClientCallbackHandler
#---------
#\u5B9A\u4E49Topic
spring.kafka.topic=test_topic1
spring.kafka.listener.missing-topics-fatal=false
